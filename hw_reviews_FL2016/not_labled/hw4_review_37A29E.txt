Overall, homework 4 was straight forward. It only had two problems, but they have some subproblems to solve. First one was using ToolRunner and running with parameter. Modifying AvgWordLength driver to use ToolRunner was easy from the slide. Then, the result were same since the parameter was not changed yet. Then, we modified LetterMapper to use configuration parameter caseSensitive. We wrote setup() method as in slide, and set the case sensitive processing as default. Then, we tested with different parameter value, which was false, and got the case insensitive result from it. Finally, we put Shakespeare directory that we made in lab1, and ran with case insensitive processing. This was successful. 
	Second problem was implementing a whole new mapper and driver and testing code. Analyzing testlog was not too hard since we just need to look at the data, figure out the format and the kinds of data it stores. We used number of line to calculate the fraction. Writing down mapper input, output, and reducer input, output was similar from previous homework. Then, we implemented mapper and driver by referring to previous works, and made test class to test the mapper, reducer and mapreduce. Then, we ran it locally before we ran it on the pseudo cluster. Then, we compare total lines in testlog with total hits in output file generated by command. Finally, we ran it on weblog. 

